import Model, { attr, hasMany } from '@ember-data/model';

export default class TaskQueryDtoModel extends Model {
  @attr('string') processInstanceId;
  @attr() processInstanceIdIn;
  @attr('string') processInstanceBusinessKey;
  @attr('string') processInstanceBusinessKeyExpression;
  @attr() processInstanceBusinessKeyIn;
  @attr('string') processInstanceBusinessKeyLike;
  @attr('string') processInstanceBusinessKeyLikeExpression;
  @attr('string') processDefinitionId;
  @attr('string') processDefinitionKey;
  @attr() processDefinitionKeyIn;
  @attr('string') processDefinitionName;
  @attr('string') processDefinitionNameLike;
  @attr('string') executionId;
  @attr('string') caseInstanceId;
  @attr('string') caseInstanceBusinessKey;
  @attr('string') caseInstanceBusinessKeyLike;
  @attr('string') caseDefinitionId;
  @attr('string') caseDefinitionKey;
  @attr('string') caseDefinitionName;
  @attr('string') caseDefinitionNameLike;
  @attr('string') caseExecutionId;
  @attr() activityInstanceIdIn;
  @attr() tenantIdIn;
  @attr('boolean') withoutTenantId;
  @attr('string') assignee;
  @attr('string') assigneeExpression;
  @attr('string') assigneeLike;
  @attr('string') assigneeLikeExpression;
  @attr() assigneeIn;
  @attr('string') owner;
  @attr('string') ownerExpression;
  @attr('string') candidateGroup;
  @attr('string') candidateGroupExpression;
  @attr('string') candidateUser;
  @attr('string') candidateUserExpression;
  @attr('boolean') includeAssignedTasks;
  @attr('string') involvedUser;
  @attr('string') involvedUserExpression;
  @attr('boolean') assigned;
  @attr('boolean') unassigned;
  @attr('string') taskDefinitionKey;
  @attr() taskDefinitionKeyIn;
  @attr('string') taskDefinitionKeyLike;
  @attr('string') name;
  @attr('string') nameNotEqual;
  @attr('string') nameLike;
  @attr('string') nameNotLike;
  @attr('string') description;
  @attr('string') descriptionLike;
  @attr('integer') priority;
  @attr('integer') maxPriority;
  @attr('integer') minPriority;
  @attr('string') dueDate;
  @attr('string') dueDateExpression;
  @attr('string') dueAfter;
  @attr('string') dueAfterExpression;
  @attr('string') dueBefore;
  @attr('string') dueBeforeExpression;
  @attr('string') followUpDate;
  @attr('string') followUpDateExpression;
  @attr('string') followUpAfter;
  @attr('string') followUpAfterExpression;
  @attr('string') followUpBefore;
  @attr('string') followUpBeforeExpression;
  @attr('string') followUpBeforeOrNotExistent;
  @attr('string') followUpBeforeOrNotExistentExpression;
  @attr('string') createdOn;
  @attr('string') createdOnExpression;
  @attr('string') createdAfter;
  @attr('string') createdAfterExpression;
  @attr('string') createdBefore;
  @attr('string') createdBeforeExpression;
  @attr('string') delegationState;
  @attr() candidateGroups;
  @attr('string') candidateGroupsExpression;
  @attr('boolean') withCandidateGroups;
  @attr('boolean') withoutCandidateGroups;
  @attr('boolean') withCandidateUsers;
  @attr('boolean') withoutCandidateUsers;
  @attr('boolean') active;
  @attr('boolean') suspended;
  @hasMany('task-variable') taskVariables;
  @hasMany('process-variable') processVariables;
  @hasMany('case-instance-variable') caseInstanceVariables;
  @attr('boolean') variableNamesIgnoreCase;
  @attr('boolean') variableValuesIgnoreCase;
  @attr('string') parentTaskId;
  @hasMany('or-query') orQueries;
  @attr() sorting;
}
